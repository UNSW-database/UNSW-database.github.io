memberSearchIndex = [{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.AddResultFiled","l":"AddResultFiled()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.CntAggregator","l":"aggregate(Long, Long)","u":"aggregate(java.lang.Long,java.lang.Long)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.CntAggregator","l":"aggregate(SCCMap)","u":"aggregate(org.dkr.graph.algo.community.SCCMap)"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath","l":"AllPairShortestPath()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.similarity","c":"AllPairSimilarity","l":"AllPairSimilarity()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality.APSPCombiner","l":"APSPCombiner()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath.APSPCombiner","l":"APSPCombiner()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.APSPComputeFunction","l":"APSPComputeFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality.APSPComputeFunction","l":"APSPComputeFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath.APSPComputeFunction","l":"APSPComputeFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality","l":"BetweennessCentrality()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.BetweennessComputeFunction","l":"BetweennessComputeFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.traversal","c":"BFS","l":"BFS()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"CycleDetection.CDComputationFunction","l":"CDComputationFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"clear()"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique.CliqueFlatMap","l":"CliqueFlatMap()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique.CliqueMessager","l":"CliqueMessager()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality","l":"ClosenessCentrality()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.CntAggregator","l":"CntAggregator()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.NbrCombiner","l":"combineMessages(MessageIterator<Long>)","u":"combineMessages(org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.OWCTYCombiner","l":"combineMessages(MessageIterator<Long>)","u":"combineMessages(org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.SCCCombiner","l":"combineMessages(MessageIterator<Tuple2<Long, Tuple2<Long, Long>>>)","u":"combineMessages(org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality.APSPCombiner","l":"combineMessages(MessageIterator<Tuple3<Long, Long, Double>>)","u":"combineMessages(org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath.APSPCombiner","l":"combineMessages(MessageIterator<Tuple3<Long, Long, Double>>)","u":"combineMessages(org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.similarity","c":"JaccardSimilaritySingleSource.SimilarityMeasure","l":"commonNeighbor(List<K>, List<K>)","u":"commonNeighbor(java.util.List,java.util.List)"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity.SSSComputationFunction","l":"compute(Vertex<K, Double>, MessageIterator<Double>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration.KSPEComputationFunction","l":"compute(Vertex<K, LinkedList<Tuple2<LinkedList<K>, Double>>>, MessageIterator<LinkedList<Tuple2<LinkedList<K>, Double>>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.path","c":"CycleDetection.CDComputationFunction","l":"compute(Vertex<Long, LinkedList<Long>>, MessageIterator<LinkedList<Long>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality.APSPComputeFunction","l":"compute(Vertex<Long, Map<Long, Double>>, MessageIterator<Tuple3<Long, Long, Double>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath.APSPComputeFunction","l":"compute(Vertex<Long, Map<Long, Double>>, MessageIterator<Tuple3<Long, Long, Double>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.APSPComputeFunction","l":"compute(Vertex<Long, Map<Long, Tuple2<Double, Long>>>, MessageIterator<Tuple4<Long, Long, Tuple2<Double, Long>, Boolean>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.ShortestPathCounting","l":"compute(Vertex<Long, Map<Long, Tuple2<Double, Long>>>, MessageIterator<Tuple5<Long, Long, Long, Double, Double>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.NbrComputeFunction","l":"compute(Vertex<Long, SCCVertexDataType>, MessageIterator<Long>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.OWCTYComputeFunction","l":"compute(Vertex<Long, SCCVertexDataType>, MessageIterator<Long>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.SCCComputeFunction","l":"compute(Vertex<Long, SCCVertexDataType>, MessageIterator<Tuple2<Long, Tuple2<Long, Long>>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.BetweennessComputeFunction","l":"compute(Vertex<Long, Tuple2<Double, Map<Long, Tuple2<Double, Long>>>>, MessageIterator<Tuple4<Long, Long, Double, Long>>)","u":"compute(org.apache.flink.graph.Vertex,org.apache.flink.graph.pregel.MessageIterator)"},{"p":"org.dkr.graph.algo.centrality","c":"DegreeCentrality.ComputeCentrality","l":"ComputeCentrality()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity.SSSComputationFunction","l":"computeSimilarity(Double, Double, Double)","u":"computeSimilarity(java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"containsKey(Object)","u":"containsKey(java.lang.Object)"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"containsValue(Object)","u":"containsValue(java.lang.Object)"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity.SSSComputationFunction","l":"cosineSimilarity(Double, Double, Double)","u":"cosineSimilarity(java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"org.dkr.graph.algo.similarity","c":"CosineSimilaritySingleSource.CosineSimilarityMeasure","l":"CosineSimilarityMeasure()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.similarity","c":"CosineSimilaritySingleSource","l":"CosineSimilaritySingleSource(K, Integer)","u":"%3Cinit%3E(K,java.lang.Integer)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration.CouplingPath","l":"CouplingPath(K, K, Double)","u":"%3Cinit%3E(K,K,java.lang.Double)"},{"p":"org.dkr.graph.algo.path","c":"CycleDetection","l":"CycleDetection()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"DegreeCentrality","l":"DegreeCentrality()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore.DegreeMap","l":"DegreeMap()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.DuplicatePLEdge","l":"DuplicatePLEdge()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"MinimumSpanningTree.EdgeFlatMap","l":"EdgeFlatMap()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank.InitialEdgeValue","l":"edgeJoin(Double, LongValue)","u":"edgeJoin(java.lang.Double,org.apache.flink.types.LongValue)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank.InitialEdgeValue","l":"edgeJoin(Double, LongValue)","u":"edgeJoin(java.lang.Double,org.apache.flink.types.LongValue)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.EdgeWithCount","l":"EdgeWithCount()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"entrySet()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.DuplicatePLEdge","l":"flatMap(Edge<Tuple2<Long, Long>, NullValue>, Collector<Edge<Tuple2<Long, Long>, NullValue>>)","u":"flatMap(org.apache.flink.graph.Edge,org.apache.flink.util.Collector)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.TriagnleToPLEdge","l":"flatMap(Tuple3<Long, Long, Long>, Collector<Edge<Tuple2<Long, Long>, NullValue>>)","u":"flatMap(org.apache.flink.api.java.tuple.Tuple3,org.apache.flink.util.Collector)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.TriagnleToEdgeWithCount","l":"flatMap(Tuple3<Long, Long, Long>, Collector<Tuple3<Long, Long, Long>>)","u":"flatMap(org.apache.flink.api.java.tuple.Tuple3,org.apache.flink.util.Collector)"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique.CliqueFlatMap","l":"flatMap(Vertex<K, List<List<K>>>, Collector<List<K>>)","u":"flatMap(org.apache.flink.graph.Vertex,org.apache.flink.util.Collector)"},{"p":"org.dkr.graph.algo.path","c":"MinimumSpanningTree.EdgeFlatMap","l":"flatMap(Vertex<Long, MinimumSpanningTree.VertexValue>, Collector<Edge<Long, Double>>)","u":"flatMap(org.apache.flink.graph.Vertex,org.apache.flink.util.Collector)"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.CntAggregator","l":"getAggregate()"},{"p":"org.dkr.graph.algo.traversal","c":"BFS","l":"getBeginVertex()"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore","l":"getMaxIterations()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss","l":"getMaxIterations()"},{"p":"org.dkr.graph.algo.traversal","c":"BFS","l":"getMaxIterations()"},{"p":"org.dkr.graph.algo.traversal","c":"TopoSort","l":"getMaxIterations()"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation.LabelPropagationMessenger","l":"getProducedType()"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents.WCCMessenger","l":"getProducedType()"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.GetResult","l":"GetResult()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank.InitialEdgeValue","l":"InitialEdgeValue()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank.InitialEdgeValue","l":"InitialEdgeValue()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"DegreeCentrality.InitialMaximumDegree","l":"InitialMaximumDegree(long)","u":"%3Cinit%3E(long)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank.InitialPersonalizedVertexValue","l":"InitialPersonalizedVertexValue(K)","u":"%3Cinit%3E(K)"},{"p":"org.dkr.graph.algo.path","c":"CycleDetection.InitialVertexMapper","l":"InitialVertexMapper()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"Louvain.InitialVertexMapper","l":"InitialVertexMapper(int)","u":"%3Cinit%3E(int)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration.InitialVertexValue","l":"InitialVertexValue()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank.InitialVertexValue","l":"InitialVertexValue(long)","u":"%3Cinit%3E(long)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.InitVertices","l":"InitVertices()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality.InitVertices","l":"InitVertices()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath.InitVertices","l":"InitVertices()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"isEmpty()"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity.SSSComputationFunction","l":"jaccardSimilarity(Double, Double, Double)","u":"jaccardSimilarity(java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"org.dkr.graph.algo.similarity","c":"JaccardSimilaritySingleSource.JaccardSimilarityMeasure","l":"JaccardSimilarityMeasure()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.similarity","c":"JaccardSimilaritySingleSource","l":"JaccardSimilaritySingleSource(K, Integer)","u":"%3Cinit%3E(K,java.lang.Integer)"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore","l":"KCore()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore.KCoreMessenger","l":"KCoreMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore.KCoreUpdater","l":"KCoreUpdater()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"keySet()"},{"p":"org.dkr.graph.algo.similarity","c":"KNearestNeighbors","l":"KNearestNeighbors(K, Integer)","u":"%3Cinit%3E(K,java.lang.Integer)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration","l":"KSimplePathEnumeration(K, K, Double)","u":"%3Cinit%3E(K,K,java.lang.Double)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration.KSPEComputationFunction","l":"KSPEComputationFunction(K, K, Double)","u":"%3Cinit%3E(K,K,java.lang.Double)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss","l":"KTruss()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.KTrussDataMap","l":"KTrussDataMap()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.KTrussMessenger","l":"KTrussMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.KTrussUpdater","l":"KTrussUpdater()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation","l":"LabelPropagation()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation.LabelPropagationMessenger","l":"LabelPropagationMessenger(TypeInformation<VV>)","u":"%3Cinit%3E(org.apache.flink.api.common.typeinfo.TypeInformation)"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation.LabelPropagationUpdater","l":"LabelPropagationUpdater()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"LocalClusterCoefficient","l":"LocalClusterCoefficient()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"Louvain","l":"Louvain()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"Louvain.LouvainMessenger","l":"LouvainMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"Louvain.LouvainUpdater","l":"LouvainUpdater(long, int)","u":"%3Cinit%3E(long,int)"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore.DegreeMap","l":"map(Tuple2<K, LongValue>)","u":"map(org.apache.flink.api.java.tuple.Tuple2)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.EdgeWithCount","l":"map(Tuple2<Long, Long>)","u":"map(org.apache.flink.api.java.tuple.Tuple2)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.SupportToKTrussData","l":"map(Tuple3<Long, Long, Long>)","u":"map(org.apache.flink.api.java.tuple.Tuple3)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.TriangleSort","l":"map(Tuple3<Long, Long, Long>)","u":"map(org.apache.flink.api.java.tuple.Tuple3)"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank.InitialVertexValue","l":"map(Vertex<K, Double>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank.InitialPersonalizedVertexValue","l":"map(Vertex<K, Double>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.community","c":"Louvain.InitialVertexMapper","l":"map(Vertex<K, Double>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration.CouplingPath","l":"map(Vertex<K, LinkedList<Tuple2<LinkedList<K>, Double>>>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.community","c":"Louvain.OutputVertexMapper","l":"map(Vertex<K, Tuple2<Long, Double>>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique.VertexMap","l":"map(Vertex<K, VV>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration.InitialVertexValue","l":"map(Vertex<K, VV>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.InitVertices","l":"map(Vertex<Long, Long>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality.InitVertices","l":"map(Vertex<Long, Long>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath.InitVertices","l":"map(Vertex<Long, Long>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.path","c":"CycleDetection.InitialVertexMapper","l":"map(Vertex<Long, Long>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.AddResultFiled","l":"map(Vertex<Long, Map<Long, Tuple2<Double, Long>>>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.GetResult","l":"map(Vertex<Long, Tuple2<Double, Map<Long, Tuple2<Double, Long>>>>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.KTrussDataMap","l":"map(Vertex<Tuple2<Long, Long>, KTruss.KTrussData>)","u":"map(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"DegreeCentrality.InitialMaximumDegree","l":"map(VV)"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique","l":"MaximalClique()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.MinBackwardMessenger","l":"MinBackwardMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.MinForwardMessenger","l":"MinForwardMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"MinimumSpanningTree","l":"MinimumSpanningTree()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.NbrCombiner","l":"NbrCombiner()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.NbrComputeFunction","l":"NbrComputeFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.traversal","c":"BFS.OrderMessenger","l":"OrderMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.traversal","c":"BFS.OrderUpdater","l":"OrderUpdater()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"Louvain.OutputVertexMapper","l":"OutputVertexMapper()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.OWCTYCombiner","l":"OWCTYCombiner()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.OWCTYComputeFunction","l":"OWCTYComputeFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank","l":"PageRank(double, int)","u":"%3Cinit%3E(double,int)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank","l":"PersonalizedPageRank(K, double, int)","u":"%3Cinit%3E(K,double,int)"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank.PPRMessenger","l":"PPRMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank.PPRMessenger","l":"PPRMessenger()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.NbrComputeFunction","l":"preSuperstep()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.OWCTYComputeFunction","l":"preSuperstep()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.SCCComputeFunction","l":"preSuperstep()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"put(ListValue<LongValue>, LongValue)","u":"put(org.apache.flink.types.ListValue,org.apache.flink.types.LongValue)"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"putAll(Map<? extends ListValue<LongValue>, ? extends LongValue>)","u":"putAll(java.util.Map)"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"read(DataInputView)","u":"read(org.apache.flink.core.memory.DataInputView)"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.CntAggregator","l":"reset()"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank","l":"run(Graph<K, Double, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank","l":"run(Graph<K, Double, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"Louvain","l":"run(Graph<K, Double, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.path","c":"KSimplePathEnumeration","l":"run(Graph<K, VV, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.centrality","c":"DegreeCentrality","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"LocalClusterCoefficient","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"TriangleCounting","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"TriangleListing","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.similarity","c":"AllPairSimilarity","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.similarity","c":"JaccardSimilaritySingleSource","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.traversal","c":"BFS","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.traversal","c":"TopoSort","l":"run(Graph<K, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.path","c":"SingleSourceShortestPath","l":"run(Graph<K, VV, Long>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality","l":"run(Graph<Long, Long, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality","l":"run(Graph<Long, Long, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath","l":"run(Graph<Long, Long, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.path","c":"CycleDetection","l":"run(Graph<Long, Long, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.path","c":"MinimumSpanningTree","l":"run(Graph<Long, VV, Double>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss","l":"run(Graph<Long, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique","l":"run(Graph<Long, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents","l":"run(Graph<Long, VV, EV>)","u":"run(org.apache.flink.graph.Graph)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.SCCCombiner","l":"SCCCombiner()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.SCCComputeFunction","l":"SCCComputeFunction()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCList","l":"SCCList()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"SCCMap()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"SCCMap(Map<ListValue<LongValue>, LongValue>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.dkr.graph.algo.community","c":"SCCVertexDataType","l":"SCCVertexDataType()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCVertexDataType","l":"SCCVertexDataType(Tuple2<Long, Long>, Boolean, Long, Long, HashSet<Long>, HashSet<Long>)","u":"%3Cinit%3E(org.apache.flink.api.java.tuple.Tuple2,java.lang.Boolean,java.lang.Long,java.lang.Long,java.util.HashSet,java.util.HashSet)"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank.PPRMessenger","l":"sendMessages(Vertex<K, Double>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank.PPRMessenger","l":"sendMessages(Vertex<K, Double>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore.KCoreMessenger","l":"sendMessages(Vertex<K, Long>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.traversal","c":"BFS.OrderMessenger","l":"sendMessages(Vertex<K, Long>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.community","c":"Louvain.LouvainMessenger","l":"sendMessages(Vertex<K, Tuple2<Long, Double>>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation.LabelPropagationMessenger","l":"sendMessages(Vertex<K, VV>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents.WCCMessenger","l":"sendMessages(Vertex<K, VV>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique.CliqueMessager","l":"sendMessages(Vertex<Long, List<List<Long>>>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.MinBackwardMessenger","l":"sendMessages(Vertex<Long, SCCVertexDataType>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.MinForwardMessenger","l":"sendMessages(Vertex<Long, SCCVertexDataType>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.KTrussMessenger","l":"sendMessages(Vertex<Tuple2<Long, Long>, KTruss.KTrussData>)","u":"sendMessages(org.apache.flink.graph.Vertex)"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank","l":"setAlpha(double)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank","l":"setAlpha(double)"},{"p":"org.dkr.graph.algo.path","c":"SingleSourceShortestPath","l":"setBeginVertex(K)"},{"p":"org.dkr.graph.algo.traversal","c":"BFS","l":"setBeginVertex(K)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.centrality","c":"ClosenessCentrality","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.community","c":"Louvain","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.path","c":"AllPairShortestPath","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.path","c":"CycleDetection","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.path","c":"MinimumSpanningTree","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.path","c":"SingleSourceShortestPath","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.traversal","c":"BFS","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.traversal","c":"TopoSort","l":"setMaxIterations(int)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents","l":"setMaxIterationsEachPhase(int)"},{"p":"org.dkr.graph.algo.similarity","c":"JaccardSimilaritySingleSource","l":"setMeasure(JaccardSimilaritySingleSource.SimilarityMeasure<K>)","u":"setMeasure(org.dkr.graph.algo.similarity.JaccardSimilaritySingleSource.SimilarityMeasure)"},{"p":"org.dkr.graph.algo.community","c":"Louvain","l":"setNumOfCommunities(int)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank","l":"setSourceId(K)"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity","l":"setSourceVertex(K)"},{"p":"org.dkr.graph.algo.similarity","c":"AllPairSimilarity","l":"setType(String)","u":"setType(java.lang.String)"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity","l":"setType(String)","u":"setType(java.lang.String)"},{"p":"org.dkr.graph.algo.centrality","c":"BetweennessCentrality.ShortestPathCounting","l":"ShortestPathCounting()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.similarity","c":"CosineSimilaritySingleSource.CosineSimilarityMeasure","l":"similarityCompute(List<K>, List<K>)","u":"similarityCompute(java.util.List,java.util.List)"},{"p":"org.dkr.graph.algo.similarity","c":"JaccardSimilaritySingleSource.JaccardSimilarityMeasure","l":"similarityCompute(List<K>, List<K>)","u":"similarityCompute(java.util.List,java.util.List)"},{"p":"org.dkr.graph.algo.similarity","c":"JaccardSimilaritySingleSource.SimilarityMeasure","l":"SimilarityMeasure()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"SingleSourceShortestPath","l":"SingleSourceShortestPath()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity","l":"SingleSourceSimilarity()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"size()"},{"p":"org.dkr.graph.algo.similarity","c":"SingleSourceSimilarity.SSSComputationFunction","l":"SSSComputationFunction(Double, String)","u":"%3Cinit%3E(java.lang.Double,java.lang.String)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents","l":"StronglyConnectedComponents()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.SupportToKTrussData","l":"SupportToKTrussData()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.traversal","c":"TopoSort","l":"TopoSort()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.TriagnleToEdgeWithCount","l":"TriagnleToEdgeWithCount()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.TriagnleToPLEdge","l":"TriagnleToPLEdge()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"TriangleCounting","l":"TriangleCounting()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"TriangleListing","l":"TriangleListing()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.TriangleSort","l":"TriangleSort()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.centrality","c":"PageRank.PPRUpdater","l":"updateVertex(Vertex<K, Double>, MessageIterator<Double>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.centrality","c":"PersonalizedPageRank.PPRUpdater","l":"updateVertex(Vertex<K, Double>, MessageIterator<Double>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.cohesive","c":"KCore.KCoreUpdater","l":"updateVertex(Vertex<K, Long>, MessageIterator<Long>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.traversal","c":"BFS.OrderUpdater","l":"updateVertex(Vertex<K, Long>, MessageIterator<Long>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"Louvain.LouvainUpdater","l":"updateVertex(Vertex<K, Tuple2<Long, Double>>, MessageIterator<Tuple2<Long, Double>>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"LabelPropagation.LabelPropagationUpdater","l":"updateVertex(Vertex<K, VV>, MessageIterator<VV>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents.WCCUpdater","l":"updateVertex(Vertex<K, VV>, MessageIterator<VV>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.VertexMinBackwardUpdater","l":"updateVertex(Vertex<Long, SCCVertexDataType>, MessageIterator<Long>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.VertexMinForwardUpdater","l":"updateVertex(Vertex<Long, SCCVertexDataType>, MessageIterator<Long>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.cohesive","c":"KTruss.KTrussUpdater","l":"updateVertex(Vertex<Tuple2<Long, Long>, KTruss.KTrussData>, MessageIterator<Tuple3<Long, Long, Long>>)","u":"updateVertex(org.apache.flink.graph.Vertex,org.apache.flink.graph.spargel.MessageIterator)"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"values()"},{"p":"org.dkr.graph.algo.centrality","c":"DegreeCentrality.ComputeCentrality","l":"vertexJoin(Double, LongValue)","u":"vertexJoin(java.lang.Double,org.apache.flink.types.LongValue)"},{"p":"org.dkr.graph.algo.cohesive","c":"MaximalClique.VertexMap","l":"VertexMap()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.VertexMinBackwardUpdater","l":"VertexMinBackwardUpdater()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"StronglyConnectedComponents.VertexMinForwardUpdater","l":"VertexMinForwardUpdater()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.path","c":"MinimumSpanningTree.VertexValue","l":"VertexValue()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents.WCCMessenger","l":"WCCMessenger(TypeInformation<VV>)","u":"%3Cinit%3E(org.apache.flink.api.common.typeinfo.TypeInformation)"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents.WCCUpdater","l":"WCCUpdater()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"WeaklyConnectedComponents","l":"WeaklyConnectedComponents()","u":"%3Cinit%3E()"},{"p":"org.dkr.graph.algo.community","c":"SCCMap","l":"write(DataOutputView)","u":"write(org.apache.flink.core.memory.DataOutputView)"}];updateSearchResults();